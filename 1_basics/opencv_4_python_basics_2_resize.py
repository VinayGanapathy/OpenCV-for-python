# -*- coding: utf-8 -*-
"""opencv_4_python_basics_2_resize.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LW8zeBg3WGJusxk85qbs9Ao9ceb3sg-c
"""

# Resize and Rescaling images and video

from google.colab import drive
drive.mount('/content/drive')

import cv2 as cv
from google.colab.patches import cv2_imshow

cat_large = cv.imread("/content/drive/MyDrive/Colab Notebooks/opencv_for_python/Resources/Photos/cat_large.jpg")
cv2_imshow(cat_large)
cv.waitKey(0) 
cv.destroyAllWindows()

# Generally, downsizing the image or video is a good practice

def rescaleFrame(frame,scale = 0.75):
  width = int(frame.shape[1] * scale)
  height = int(frame.shape[0] * scale)
  dimensions = (width,height)

  return cv.resize(frame, dimensions, interpolation = cv.INTER_AREA)

capture = cv.VideoCapture("/content/drive/MyDrive/Colab Notebooks/opencv_for_python/Resources/Videos/dog.mp4")

while True:
  isTrue, frame = capture.read()
  frame_resized = rescaleFrame(frame)
  cv2_imshow(frame_resized)
 
  if cv.waitKey(20) & 0xFF==ord('d'):
    break

capture.relaease()
cv.destroyAllWindows()

def rescaleFrame(frame,scale = 0.2):
  #This method works for Images, video and live video
  width = int(frame.shape[1] * scale)
  height = int(frame.shape[0] * scale)
  dimensions = (width,height)

  return cv.resize(frame, dimensions, interpolation = cv.INTER_AREA)

capture = cv.VideoCapture("/content/drive/MyDrive/Colab Notebooks/opencv_for_python/Resources/Videos/dog.mp4")

while True:
  isTrue, frame = capture.read()
  frame_resized = rescaleFrame(frame)
  cv2_imshow(frame_resized)
 
  if cv.waitKey(20) & 0xFF==ord('d'):
    break

capture.relaease()
cv.destroyAllWindows()

resized_cat = rescaleFrame(cat_large)
cv2_imshow(resized_cat)

def changeRes(width,height):
  # works for only live video
  capture.set(3,width)
  capture.set(4,height)

